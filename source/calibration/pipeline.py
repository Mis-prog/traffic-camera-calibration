from core.camera import Camera
from calibration.base import Calibration


class CalibrationPipeline:
    def __init__(self,
                 init_stage: Calibration = None,
                 refine_stage: Calibration = None):
        """
        :param init_stage: —ç—Ç–∞–ø –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏  –ø–æ —Ç–æ—á–∫–∞–º —Å—Ö–æ–¥–∞
        :param refine_stage: —ç—Ç–∞–ø —É—Ç–æ—á–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä—è–º–∞—è/–æ–±—Ä–∞—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)
        """
        self.init_stage = init_stage
        self.refine_stage = refine_stage

    def run(self, camera: Camera, data: dict, **kwargs) -> Camera:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –∫–∞–ª–∏–±—Ä–æ–≤–∫—É –∫–∞–º–µ—Ä—ã.

        :param camera: –æ–±—ä–µ–∫—Ç –∫–∞–º–µ—Ä—ã
        :param data: –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ç–∫–∏ (–Ω–∞–ø—Ä. {'angle': [...], 'parallel-1': [...]})
        :param kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, error_func –∏–ª–∏ solver)
        """

        if self.init_stage:
            print("=" * 60)
            print("üîß [Pipeline] –≠—Ç–∞–ø 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä—ã (Initial Calibration)")
            print("=" * 60)
            self.init_stage.camera = camera
            camera = self.init_stage.run(None)
            print("‚úÖ [Pipeline] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n")

        if self.refine_stage:
            print("=" * 60)
            print("üîß [Pipeline] –≠—Ç–∞–ø 2: –î–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (Refinement)")
            print("=" * 60)
            self.refine_stage.camera = camera
            camera = self.refine_stage.run(data, **kwargs)
            print("‚úÖ [Pipeline] –î–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n")

        print("üéØ [Pipeline] –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–∞–º–µ—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return camera

